const sg = @import("sokol").gfx;
const std = @import("std");
//
//    #version:1# (machine generated, don't edit!)
//
//    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)
//
//    Cmdline:
//        sokol-shdc -i .\src\shaders\blank.glsl -o .\src\shaders\blank.glsl.zig -l glsl410:metal_macos:hlsl5:glsl300es:wgsl -f sokol_zig --reflection
//
//    Overview:
//    =========
//    Shader program: 'blank':
//        Get shader desc: shd.blankShaderDesc(sg.queryBackend());
//        Vertex Shader: vs
//        Fragment Shader: fs
//        Attributes:
//    Bindings:
//        Uniform block 'vs_params':
//            Zig struct: VsParams
//            Bind slot: UB_vs_params => 2
//        Image 'sprite_texture':
//            Image type: ._2D
//            Sample type: .FLOAT
//            Multisampled: false
//            Bind slot: IMG_sprite_texture => 0
//        Sampler 'sprite_sampler':
//            Type: .FILTERING
//            Bind slot: SMP_sprite_sampler => 1
//        Image Sampler Pair 'sprite_texture_sprite_sampler':
//            Image: sprite_texture
//            Sampler: sprite_sampler
//
pub const UB_vs_params = 2;
pub const IMG_sprite_texture = 0;
pub const SMP_sprite_sampler = 1;
pub const VsParams = extern struct {
    sprite_rect: [4]f32 align(16),
    screen_size: [2]f32 align(1),
    _pad_24: [8]u8 align(1) = undefined,
};
//
//    #version 410
//
//    const vec2 _19[6] = vec2[](vec2(0.0, 64.0), vec2(64.0), vec2(0.0), vec2(64.0), vec2(64.0, 0.0), vec2(0.0));
//    const vec2 _60[6] = vec2[](vec2(0.0, 1.0), vec2(1.0), vec2(0.0), vec2(1.0), vec2(1.0, 0.0), vec2(0.0));
//
//    uniform vec4 vs_params[2];
//    layout(location = 0) out vec2 v_texcoord;
//
//    void main()
//    {
//        vec2 _43 = ((_19[gl_VertexID] / vs_params[1].xy) * 2.0) - vec2(1.0);
//        v_texcoord = vec2(fma(_60[gl_VertexID].x, vs_params[0].z, vs_params[0].x), fma(_60[gl_VertexID].y, vs_params[0].w, vs_params[0].y));
//        gl_Position = vec4(_43.x, -_43.y, 0.0, 1.0);
//    }
//
//
const vs_source_glsl410 = [574]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x63,0x6f,
    0x6e,0x73,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x31,0x39,0x5b,0x36,0x5d,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x32,0x5b,0x5d,0x28,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,
    0x30,0x2c,0x20,0x36,0x34,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x36,
    0x34,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x29,0x2c,
    0x20,0x76,0x65,0x63,0x32,0x28,0x36,0x34,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,
    0x32,0x28,0x36,0x34,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,
    0x63,0x32,0x28,0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x63,0x6f,0x6e,0x73,0x74,0x20,
    0x76,0x65,0x63,0x32,0x20,0x5f,0x36,0x30,0x5b,0x36,0x5d,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x32,0x5b,0x5d,0x28,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x2c,0x20,
    0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,
    0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x29,0x29,
    0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x5f,0x74,0x65,
    0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,
    0x5f,0x34,0x33,0x20,0x3d,0x20,0x28,0x28,0x5f,0x31,0x39,0x5b,0x67,0x6c,0x5f,0x56,
    0x65,0x72,0x74,0x65,0x78,0x49,0x44,0x5d,0x20,0x2f,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x29,0x20,0x2a,0x20,0x32,0x2e,
    0x30,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x32,0x28,0x66,0x6d,0x61,0x28,0x5f,0x36,0x30,0x5b,0x67,0x6c,
    0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x44,0x5d,0x2e,0x78,0x2c,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x7a,0x2c,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x29,0x2c,0x20,0x66,
    0x6d,0x61,0x28,0x5f,0x36,0x30,0x5b,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,
    0x49,0x44,0x5d,0x2e,0x79,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x30,0x5d,0x2e,0x77,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x30,0x5d,0x2e,0x79,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x5f,0x34,0x33,0x2e,0x78,0x2c,0x20,0x2d,0x5f,0x34,0x33,0x2e,0x79,0x2c,0x20,0x30,
    0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    #version 410
//
//    uniform sampler2D sprite_texture_sprite_sampler;
//
//    layout(location = 0) out vec4 frag_color;
//    layout(location = 0) in vec2 v_texcoord;
//
//    void main()
//    {
//        frag_color = texture(sprite_texture_sprite_sampler, v_texcoord);
//    }
//
//
const fs_source_glsl410 = [235]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,
    0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,
    0x70,0x72,0x69,0x74,0x65,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,0x0a,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,
    0x64,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x73,0x70,0x72,0x69,0x74,
    0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x70,0x72,0x69,0x74,0x65,
    0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    #version 300 es
//
//    const vec2 _19[6] = vec2[](vec2(0.0, 64.0), vec2(64.0), vec2(0.0), vec2(64.0), vec2(64.0, 0.0), vec2(0.0));
//    const vec2 _60[6] = vec2[](vec2(0.0, 1.0), vec2(1.0), vec2(0.0), vec2(1.0), vec2(1.0, 0.0), vec2(0.0));
//
//    uniform vec4 vs_params[2];
//    out vec2 v_texcoord;
//
//    void main()
//    {
//        vec2 _43 = ((_19[gl_VertexID] / vs_params[1].xy) * 2.0) - vec2(1.0);
//        v_texcoord = vec2(_60[gl_VertexID].x * vs_params[0].z + vs_params[0].x, _60[gl_VertexID].y * vs_params[0].w + vs_params[0].y);
//        gl_Position = vec4(_43.x, -_43.y, 0.0, 1.0);
//    }
//
//
const vs_source_glsl300es = [550]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x63,0x6f,0x6e,0x73,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x31,0x39,0x5b,
    0x36,0x5d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x5b,0x5d,0x28,0x76,0x65,0x63,0x32,
    0x28,0x30,0x2e,0x30,0x2c,0x20,0x36,0x34,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,
    0x32,0x28,0x36,0x34,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,
    0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x36,0x34,0x2e,0x30,0x29,0x2c,0x20,
    0x76,0x65,0x63,0x32,0x28,0x36,0x34,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,
    0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x63,0x6f,0x6e,
    0x73,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x36,0x30,0x5b,0x36,0x5d,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x32,0x5b,0x5d,0x28,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,
    0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,
    0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,
    0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,
    0x30,0x29,0x29,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,
    0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x3b,
    0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,
    0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x34,
    0x33,0x20,0x3d,0x20,0x28,0x28,0x5f,0x31,0x39,0x5b,0x67,0x6c,0x5f,0x56,0x65,0x72,
    0x74,0x65,0x78,0x49,0x44,0x5d,0x20,0x2f,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,
    0x20,0x2d,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x32,0x28,0x5f,0x36,0x30,0x5b,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,
    0x78,0x49,0x44,0x5d,0x2e,0x78,0x20,0x2a,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x7a,0x20,0x2b,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x2c,0x20,0x5f,0x36,0x30,0x5b,0x67,0x6c,
    0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x44,0x5d,0x2e,0x79,0x20,0x2a,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x77,0x20,0x2b,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x79,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x34,0x33,0x2e,0x78,0x2c,0x20,0x2d,
    0x5f,0x34,0x33,0x2e,0x79,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    #version 300 es
//    precision mediump float;
//    precision highp int;
//
//    uniform highp sampler2D sprite_texture_sprite_sampler;
//
//    layout(location = 0) out highp vec4 frag_color;
//    in highp vec2 v_texcoord;
//
//    void main()
//    {
//        frag_color = texture(sprite_texture_sprite_sampler, v_texcoord);
//    }
//
//
const fs_source_glsl300es = [281]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x75,
    0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x32,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,
    0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x73,
    0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,
    0x72,0x64,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    static const float2 _19[6] = { float2(0.0f, 64.0f), 64.0f.xx, 0.0f.xx, 64.0f.xx, float2(64.0f, 0.0f), 0.0f.xx };
//    static const float2 _60[6] = { float2(0.0f, 1.0f), 1.0f.xx, 0.0f.xx, 1.0f.xx, float2(1.0f, 0.0f), 0.0f.xx };
//
//    cbuffer vs_params : register(b0)
//    {
//        float4 _33_sprite_rect : packoffset(c0);
//        float2 _33_screen_size : packoffset(c1);
//    };
//
//
//    static float4 gl_Position;
//    static int gl_VertexIndex;
//    static float2 v_texcoord;
//
//    struct SPIRV_Cross_Input
//    {
//        uint gl_VertexIndex : SV_VertexID;
//    };
//
//    struct SPIRV_Cross_Output
//    {
//        float2 v_texcoord : TEXCOORD0;
//        float4 gl_Position : SV_Position;
//    };
//
//    void vert_main()
//    {
//        float2 _43 = ((_19[gl_VertexIndex] / _33_screen_size) * 2.0f) - 1.0f.xx;
//        v_texcoord = float2(mad(_60[gl_VertexIndex].x, _33_sprite_rect.z, _33_sprite_rect.x), mad(_60[gl_VertexIndex].y, _33_sprite_rect.w, _33_sprite_rect.y));
//        gl_Position = float4(_43.x, -_43.y, 0.0f, 1.0f);
//    }
//
//    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
//    {
//        gl_VertexIndex = int(stage_input.gl_VertexIndex);
//        vert_main();
//        SPIRV_Cross_Output stage_output;
//        stage_output.gl_Position = gl_Position;
//        stage_output.v_texcoord = v_texcoord;
//        return stage_output;
//    }
//
const vs_source_hlsl5 = [1197]u8 {
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x5f,0x31,0x39,0x5b,0x36,0x5d,0x20,0x3d,0x20,0x7b,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x28,0x30,0x2e,0x30,0x66,0x2c,0x20,0x36,0x34,0x2e,0x30,
    0x66,0x29,0x2c,0x20,0x36,0x34,0x2e,0x30,0x66,0x2e,0x78,0x78,0x2c,0x20,0x30,0x2e,
    0x30,0x66,0x2e,0x78,0x78,0x2c,0x20,0x36,0x34,0x2e,0x30,0x66,0x2e,0x78,0x78,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x36,0x34,0x2e,0x30,0x66,0x2c,0x20,0x30,
    0x2e,0x30,0x66,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2e,0x78,0x78,0x20,0x7d,0x3b,
    0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x20,0x5f,0x36,0x30,0x5b,0x36,0x5d,0x20,0x3d,0x20,0x7b,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,
    0x66,0x29,0x2c,0x20,0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,0x2c,0x20,0x30,0x2e,0x30,
    0x66,0x2e,0x78,0x78,0x2c,0x20,0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,
    0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2e,0x78,0x78,0x20,0x7d,0x3b,0x0a,0x0a,0x63,
    0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x33,0x33,
    0x5f,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x63,0x74,0x20,0x3a,0x20,0x70,
    0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x33,0x33,0x5f,0x73,0x63,
    0x72,0x65,0x65,0x6e,0x5f,0x73,0x69,0x7a,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x31,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x69,0x6e,0x74,0x20,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,
    0x49,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,
    0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,
    0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x75,0x69,0x6e,0x74,0x20,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,
    0x6e,0x64,0x65,0x78,0x20,0x3a,0x20,0x53,0x56,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,
    0x49,0x44,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,
    0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,
    0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,
    0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,
    0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,
    0x34,0x33,0x20,0x3d,0x20,0x28,0x28,0x5f,0x31,0x39,0x5b,0x67,0x6c,0x5f,0x56,0x65,
    0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x5d,0x20,0x2f,0x20,0x5f,0x33,0x33,
    0x5f,0x73,0x63,0x72,0x65,0x65,0x6e,0x5f,0x73,0x69,0x7a,0x65,0x29,0x20,0x2a,0x20,
    0x32,0x2e,0x30,0x66,0x29,0x20,0x2d,0x20,0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,
    0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x6d,0x61,0x64,0x28,0x5f,0x36,0x30,
    0x5b,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x5d,
    0x2e,0x78,0x2c,0x20,0x5f,0x33,0x33,0x5f,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,
    0x65,0x63,0x74,0x2e,0x7a,0x2c,0x20,0x5f,0x33,0x33,0x5f,0x73,0x70,0x72,0x69,0x74,
    0x65,0x5f,0x72,0x65,0x63,0x74,0x2e,0x78,0x29,0x2c,0x20,0x6d,0x61,0x64,0x28,0x5f,
    0x36,0x30,0x5b,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,
    0x78,0x5d,0x2e,0x79,0x2c,0x20,0x5f,0x33,0x33,0x5f,0x73,0x70,0x72,0x69,0x74,0x65,
    0x5f,0x72,0x65,0x63,0x74,0x2e,0x77,0x2c,0x20,0x5f,0x33,0x33,0x5f,0x73,0x70,0x72,
    0x69,0x74,0x65,0x5f,0x72,0x65,0x63,0x74,0x2e,0x79,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x5f,0x34,0x33,0x2e,0x78,0x2c,0x20,0x2d,0x5f,
    0x34,0x33,0x2e,0x79,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,
    0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,
    0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,
    0x78,0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,
    0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,
    0x65,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,
    0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,
    0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,
    0x72,0x64,0x20,0x3d,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
};
//
//    Texture2D<float4> sprite_texture : register(t0);
//    SamplerState sprite_sampler : register(s0);
//
//    static float4 frag_color;
//    static float2 v_texcoord;
//
//    struct SPIRV_Cross_Input
//    {
//        float2 v_texcoord : TEXCOORD0;
//    };
//
//    struct SPIRV_Cross_Output
//    {
//        float4 frag_color : SV_Target0;
//    };
//
//    void frag_main()
//    {
//        frag_color = sprite_texture.Sample(sprite_sampler, v_texcoord);
//    }
//
//    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
//    {
//        v_texcoord = stage_input.v_texcoord;
//        frag_main();
//        SPIRV_Cross_Output stage_output;
//        stage_output.frag_color = frag_color;
//        return stage_output;
//    }
//
const fs_source_hlsl5 = [593]u8 {
    0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x3e,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x30,0x29,0x3b,
    0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x73,0x70,
    0x72,0x69,0x74,0x65,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x3a,0x20,0x72,
    0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x30,0x29,0x3b,0x0a,0x0a,0x73,0x74,
    0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,
    0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,
    0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,
    0x65,0x74,0x30,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x73,0x70,0x72,
    0x69,0x74,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x2e,0x53,0x61,0x6d,0x70,
    0x6c,0x65,0x28,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x2c,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,
    0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,
    0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,
    0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,
    0x00,
};
//
//    #pragma clang diagnostic ignored "-Wmissing-prototypes"
//    #pragma clang diagnostic ignored "-Wmissing-braces"
//
//    #include <metal_stdlib>
//    #include <simd/simd.h>
//
//    using namespace metal;
//
//    template<typename T, size_t Num>
//    struct spvUnsafeArray
//    {
//        T elements[Num ? Num : 1];
//
//        thread T& operator [] (size_t pos) thread
//        {
//            return elements[pos];
//        }
//        constexpr const thread T& operator [] (size_t pos) const thread
//        {
//            return elements[pos];
//        }
//
//        device T& operator [] (size_t pos) device
//        {
//            return elements[pos];
//        }
//        constexpr const device T& operator [] (size_t pos) const device
//        {
//            return elements[pos];
//        }
//
//        constexpr const constant T& operator [] (size_t pos) const constant
//        {
//            return elements[pos];
//        }
//
//        threadgroup T& operator [] (size_t pos) threadgroup
//        {
//            return elements[pos];
//        }
//        constexpr const threadgroup T& operator [] (size_t pos) const threadgroup
//        {
//            return elements[pos];
//        }
//    };
//
//    struct vs_params
//    {
//        float4 sprite_rect;
//        float2 screen_size;
//    };
//
//    constant spvUnsafeArray<float2, 6> _19 = spvUnsafeArray<float2, 6>({ float2(0.0, 64.0), float2(64.0), float2(0.0), float2(64.0), float2(64.0, 0.0), float2(0.0) });
//    constant spvUnsafeArray<float2, 6> _60 = spvUnsafeArray<float2, 6>({ float2(0.0, 1.0), float2(1.0), float2(0.0), float2(1.0), float2(1.0, 0.0), float2(0.0) });
//
//    struct main0_out
//    {
//        float2 v_texcoord [[user(locn0)]];
//        float4 gl_Position [[position]];
//    };
//
//    vertex main0_out main0(constant vs_params& _33 [[buffer(0)]], uint gl_VertexIndex [[vertex_id]])
//    {
//        main0_out out = {};
//        float2 _43 = ((_19[int(gl_VertexIndex)] / _33.screen_size) * 2.0) - float2(1.0);
//        out.v_texcoord = float2(fma(_60[int(gl_VertexIndex)].x, _33.sprite_rect.z, _33.sprite_rect.x), fma(_60[int(gl_VertexIndex)].y, _33.sprite_rect.w, _33.sprite_rect.y));
//        out.gl_Position = float4(_43.x, -_43.y, 0.0, 1.0);
//        return out;
//    }
//
//
const vs_source_metal_macos = [1970]u8 {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,
    0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,
    0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,
    0x69,0x6e,0x67,0x2d,0x62,0x72,0x61,0x63,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,
    0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,
    0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,
    0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,
    0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,
    0x61,0x6c,0x3b,0x0a,0x0a,0x74,0x65,0x6d,0x70,0x6c,0x61,0x74,0x65,0x3c,0x74,0x79,
    0x70,0x65,0x6e,0x61,0x6d,0x65,0x20,0x54,0x2c,0x20,0x73,0x69,0x7a,0x65,0x5f,0x74,
    0x20,0x4e,0x75,0x6d,0x3e,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x73,0x70,0x76,
    0x55,0x6e,0x73,0x61,0x66,0x65,0x41,0x72,0x72,0x61,0x79,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x54,0x20,0x65,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x73,0x5b,0x4e,0x75,0x6d,
    0x20,0x3f,0x20,0x4e,0x75,0x6d,0x20,0x3a,0x20,0x31,0x5d,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x0a,0x20,0x20,0x20,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x54,0x26,0x20,
    0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,0x20,0x5b,0x5d,0x20,0x28,0x73,0x69,0x7a,
    0x65,0x5f,0x74,0x20,0x70,0x6f,0x73,0x29,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x65,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x73,0x5b,0x70,0x6f,
    0x73,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,
    0x6e,0x73,0x74,0x65,0x78,0x70,0x72,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x74,0x68,
    0x72,0x65,0x61,0x64,0x20,0x54,0x26,0x20,0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,
    0x20,0x5b,0x5d,0x20,0x28,0x73,0x69,0x7a,0x65,0x5f,0x74,0x20,0x70,0x6f,0x73,0x29,
    0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x65,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x73,0x5b,0x70,0x6f,0x73,0x5d,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x0a,0x20,0x20,0x20,
    0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x20,0x54,0x26,0x20,0x6f,0x70,0x65,0x72,0x61,
    0x74,0x6f,0x72,0x20,0x5b,0x5d,0x20,0x28,0x73,0x69,0x7a,0x65,0x5f,0x74,0x20,0x70,
    0x6f,0x73,0x29,0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x65,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x73,0x5b,0x70,0x6f,0x73,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6e,0x73,0x74,0x65,0x78,
    0x70,0x72,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x20,
    0x54,0x26,0x20,0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,0x20,0x5b,0x5d,0x20,0x28,
    0x73,0x69,0x7a,0x65,0x5f,0x74,0x20,0x70,0x6f,0x73,0x29,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x65,0x6c,
    0x65,0x6d,0x65,0x6e,0x74,0x73,0x5b,0x70,0x6f,0x73,0x5d,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x65,0x78,0x70,0x72,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x63,0x6f,0x6e,0x73,
    0x74,0x61,0x6e,0x74,0x20,0x54,0x26,0x20,0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,
    0x20,0x5b,0x5d,0x20,0x28,0x73,0x69,0x7a,0x65,0x5f,0x74,0x20,0x70,0x6f,0x73,0x29,
    0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x65,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x73,0x5b,0x70,0x6f,
    0x73,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x0a,0x20,
    0x20,0x20,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x67,0x72,0x6f,0x75,0x70,0x20,0x54,
    0x26,0x20,0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,0x20,0x5b,0x5d,0x20,0x28,0x73,
    0x69,0x7a,0x65,0x5f,0x74,0x20,0x70,0x6f,0x73,0x29,0x20,0x74,0x68,0x72,0x65,0x61,
    0x64,0x67,0x72,0x6f,0x75,0x70,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x65,0x6c,0x65,0x6d,
    0x65,0x6e,0x74,0x73,0x5b,0x70,0x6f,0x73,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6e,0x73,0x74,0x65,0x78,0x70,0x72,0x20,0x63,
    0x6f,0x6e,0x73,0x74,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x67,0x72,0x6f,0x75,0x70,
    0x20,0x54,0x26,0x20,0x6f,0x70,0x65,0x72,0x61,0x74,0x6f,0x72,0x20,0x5b,0x5d,0x20,
    0x28,0x73,0x69,0x7a,0x65,0x5f,0x74,0x20,0x70,0x6f,0x73,0x29,0x20,0x63,0x6f,0x6e,
    0x73,0x74,0x20,0x74,0x68,0x72,0x65,0x61,0x64,0x67,0x72,0x6f,0x75,0x70,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x65,0x6c,0x65,0x6d,0x65,0x6e,0x74,0x73,0x5b,0x70,0x6f,0x73,
    0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x73,0x70,0x72,0x69,0x74,
    0x65,0x5f,0x72,0x65,0x63,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x20,0x73,0x63,0x72,0x65,0x65,0x6e,0x5f,0x73,0x69,0x7a,0x65,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x73,0x70,0x76,
    0x55,0x6e,0x73,0x61,0x66,0x65,0x41,0x72,0x72,0x61,0x79,0x3c,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x2c,0x20,0x36,0x3e,0x20,0x5f,0x31,0x39,0x20,0x3d,0x20,0x73,0x70,0x76,
    0x55,0x6e,0x73,0x61,0x66,0x65,0x41,0x72,0x72,0x61,0x79,0x3c,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x2c,0x20,0x36,0x3e,0x28,0x7b,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x36,0x34,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x28,0x36,0x34,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,
    0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x36,0x34,
    0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x36,0x34,0x2e,0x30,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x30,
    0x2e,0x30,0x29,0x20,0x7d,0x29,0x3b,0x0a,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,
    0x20,0x73,0x70,0x76,0x55,0x6e,0x73,0x61,0x66,0x65,0x41,0x72,0x72,0x61,0x79,0x3c,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x2c,0x20,0x36,0x3e,0x20,0x5f,0x36,0x30,0x20,0x3d,
    0x20,0x73,0x70,0x76,0x55,0x6e,0x73,0x61,0x66,0x65,0x41,0x72,0x72,0x61,0x79,0x3c,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x2c,0x20,0x36,0x3e,0x28,0x7b,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x28,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x28,0x31,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x28,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,
    0x31,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x31,0x2e,0x30,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x30,
    0x2e,0x30,0x29,0x20,0x7d,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,
    0x64,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,
    0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x65,0x72,0x74,
    0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x28,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x33,0x33,0x20,0x5b,0x5b,0x62,0x75,0x66,
    0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x75,0x69,0x6e,0x74,0x20,0x67,
    0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x20,0x5b,0x5b,
    0x76,0x65,0x72,0x74,0x65,0x78,0x5f,0x69,0x64,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,
    0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x5f,0x34,0x33,0x20,0x3d,0x20,0x28,0x28,0x5f,0x31,0x39,0x5b,0x69,0x6e,
    0x74,0x28,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,
    0x29,0x5d,0x20,0x2f,0x20,0x5f,0x33,0x33,0x2e,0x73,0x63,0x72,0x65,0x65,0x6e,0x5f,
    0x73,0x69,0x7a,0x65,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2d,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x66,0x6d,0x61,0x28,0x5f,0x36,0x30,0x5b,
    0x69,0x6e,0x74,0x28,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,
    0x65,0x78,0x29,0x5d,0x2e,0x78,0x2c,0x20,0x5f,0x33,0x33,0x2e,0x73,0x70,0x72,0x69,
    0x74,0x65,0x5f,0x72,0x65,0x63,0x74,0x2e,0x7a,0x2c,0x20,0x5f,0x33,0x33,0x2e,0x73,
    0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x63,0x74,0x2e,0x78,0x29,0x2c,0x20,0x66,
    0x6d,0x61,0x28,0x5f,0x36,0x30,0x5b,0x69,0x6e,0x74,0x28,0x67,0x6c,0x5f,0x56,0x65,
    0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x29,0x5d,0x2e,0x79,0x2c,0x20,0x5f,
    0x33,0x33,0x2e,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x63,0x74,0x2e,0x77,
    0x2c,0x20,0x5f,0x33,0x33,0x2e,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x63,
    0x74,0x2e,0x79,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x28,0x5f,0x34,0x33,0x2e,0x78,0x2c,0x20,0x2d,0x5f,0x34,0x33,0x2e,
    0x79,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x00,
};
//
//    #include <metal_stdlib>
//    #include <simd/simd.h>
//
//    using namespace metal;
//
//    struct main0_out
//    {
//        float4 frag_color [[color(0)]];
//    };
//
//    struct main0_in
//    {
//        float2 v_texcoord [[user(locn0)]];
//    };
//
//    fragment main0_out main0(main0_in in [[stage_in]], texture2d<float> sprite_texture [[texture(0)]], sampler sprite_sampler [[sampler(0)]])
//    {
//        main0_out out = {};
//        out.frag_color = sprite_texture.sample(sprite_sampler, in.v_texcoord);
//        return out;
//    }
//
//
const fs_source_metal_macos = [451]u8 {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x5b,0x5b,0x75,0x73,0x65,
    0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,
    0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,
    0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,
    0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x3c,0x66,0x6c,0x6f,
    0x61,0x74,0x3e,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,0x29,0x5d,
    0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x73,0x70,0x72,0x69,0x74,
    0x65,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x5b,0x5b,0x73,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,
    0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,0x28,0x73,
    0x70,0x72,0x69,0x74,0x65,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,0x69,
    0x6e,0x2e,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x00,
};
//
//    diagnostic(off, derivative_uniformity);
//
//    struct vs_params {
//      /_ @offset(0) _/
//      sprite_rect : vec4f,
//      /_ @offset(16) _/
//      screen_size : vec2f,
//    }
//
//    var<private> gl_VertexIndex : i32;
//
//    @group(0) @binding(0) var<uniform> x_33 : vs_params;
//
//    var<private> v_texcoord : vec2f;
//
//    var<private> gl_Position : vec4f;
//
//    const x_16 = vec2f(64.0f, 64.0f);
//
//    const x_17 = vec2f(0.0f, 0.0f);
//
//    const x_58 = vec2f(1.0f, 1.0f);
//
//    const x_60 = array<vec2f, 6u>(vec2f(0.0f, 1.0f), x_58, x_17, x_58, vec2f(1.0f, 0.0f), x_17);
//
//    fn main_1() {
//      var pos : vec2f;
//      var indexable : array<vec2f, 6u>;
//      var clip_pos : vec2f;
//      var indexable_1 : array<vec2f, 6u>;
//      var indexable_2 : array<vec2f, 6u>;
//      let x_23 : i32 = gl_VertexIndex;
//      indexable = array<vec2f, 6u>(vec2f(0.0f, 64.0f), x_16, x_17, x_16, vec2f(64.0f, 0.0f), x_17);
//      let x_27 : vec2f = indexable[x_23];
//      pos = x_27;
//      let x_29 : vec2f = pos;
//      let x_37 : vec2f = x_33.screen_size;
//      clip_pos = (((x_29 / x_37) * 2.0f) - vec2f(1.0f, 1.0f));
//      let x_47 : f32 = clip_pos.y;
//      clip_pos.y = -(x_47);
//      let x_56 : f32 = x_33.sprite_rect.x;
//      let x_61 : i32 = gl_VertexIndex;
//      indexable_1 = x_60;
//      let x_64 : f32 = indexable_1[x_61].x;
//      let x_67 : f32 = x_33.sprite_rect.z;
//      let x_71 : f32 = x_33.sprite_rect.y;
//      let x_72 : i32 = gl_VertexIndex;
//      indexable_2 = x_60;
//      let x_75 : f32 = indexable_2[x_72].y;
//      let x_78 : f32 = x_33.sprite_rect.w;
//      v_texcoord = vec2f((x_56 + (x_64 * x_67)), (x_71 + (x_75 * x_78)));
//      let x_86 : vec2f = clip_pos;
//      gl_Position = vec4f(x_86.x, x_86.y, 0.0f, 1.0f);
//      return;
//    }
//
//    struct main_out {
//      @location(0)
//      v_texcoord_1 : vec2f,
//      @builtin(position)
//      gl_Position : vec4f,
//    }
//
//    @vertex
//    fn main(@builtin(vertex_index) gl_VertexIndex_param : u32) -> main_out {
//      gl_VertexIndex = bitcast<i32>(gl_VertexIndex_param);
//      main_1();
//      return main_out(v_texcoord, gl_Position);
//    }
//
//
const vs_source_wgsl = [1848]u8 {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x7b,0x0a,0x20,0x20,0x2f,0x2a,
    0x20,0x40,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x30,0x29,0x20,0x2a,0x2f,0x0a,0x20,
    0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x63,0x74,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x34,0x66,0x2c,0x0a,0x20,0x20,0x2f,0x2a,0x20,0x40,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x28,0x31,0x36,0x29,0x20,0x2a,0x2f,0x0a,0x20,0x20,0x73,0x63,0x72,0x65,
    0x65,0x6e,0x5f,0x73,0x69,0x7a,0x65,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x2c,
    0x0a,0x7d,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,
    0x20,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x20,
    0x3a,0x20,0x69,0x33,0x32,0x3b,0x0a,0x0a,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,0x30,
    0x29,0x20,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x30,0x29,0x20,0x76,0x61,
    0x72,0x3c,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x3e,0x20,0x78,0x5f,0x33,0x33,0x20,
    0x3a,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x3b,0x0a,0x0a,0x76,0x61,
    0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x76,0x5f,0x74,0x65,0x78,
    0x63,0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x3b,0x0a,0x0a,
    0x76,0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,
    0x3b,0x0a,0x0a,0x63,0x6f,0x6e,0x73,0x74,0x20,0x78,0x5f,0x31,0x36,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x32,0x66,0x28,0x36,0x34,0x2e,0x30,0x66,0x2c,0x20,0x36,0x34,0x2e,
    0x30,0x66,0x29,0x3b,0x0a,0x0a,0x63,0x6f,0x6e,0x73,0x74,0x20,0x78,0x5f,0x31,0x37,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x66,0x28,0x30,0x2e,0x30,0x66,0x2c,0x20,0x30,
    0x2e,0x30,0x66,0x29,0x3b,0x0a,0x0a,0x63,0x6f,0x6e,0x73,0x74,0x20,0x78,0x5f,0x35,
    0x38,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x66,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,
    0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x0a,0x63,0x6f,0x6e,0x73,0x74,0x20,0x78,0x5f,
    0x36,0x30,0x20,0x3d,0x20,0x61,0x72,0x72,0x61,0x79,0x3c,0x76,0x65,0x63,0x32,0x66,
    0x2c,0x20,0x36,0x75,0x3e,0x28,0x76,0x65,0x63,0x32,0x66,0x28,0x30,0x2e,0x30,0x66,
    0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x2c,0x20,0x78,0x5f,0x35,0x38,0x2c,0x20,0x78,
    0x5f,0x31,0x37,0x2c,0x20,0x78,0x5f,0x35,0x38,0x2c,0x20,0x76,0x65,0x63,0x32,0x66,
    0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x2c,0x20,0x78,0x5f,
    0x31,0x37,0x29,0x3b,0x0a,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,
    0x29,0x20,0x7b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x70,0x6f,0x73,0x20,0x3a,0x20,
    0x76,0x65,0x63,0x32,0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x69,0x6e,0x64,
    0x65,0x78,0x61,0x62,0x6c,0x65,0x20,0x3a,0x20,0x61,0x72,0x72,0x61,0x79,0x3c,0x76,
    0x65,0x63,0x32,0x66,0x2c,0x20,0x36,0x75,0x3e,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,
    0x20,0x63,0x6c,0x69,0x70,0x5f,0x70,0x6f,0x73,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,
    0x66,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x69,0x6e,0x64,0x65,0x78,0x61,0x62,
    0x6c,0x65,0x5f,0x31,0x20,0x3a,0x20,0x61,0x72,0x72,0x61,0x79,0x3c,0x76,0x65,0x63,
    0x32,0x66,0x2c,0x20,0x36,0x75,0x3e,0x3b,0x0a,0x20,0x20,0x76,0x61,0x72,0x20,0x69,
    0x6e,0x64,0x65,0x78,0x61,0x62,0x6c,0x65,0x5f,0x32,0x20,0x3a,0x20,0x61,0x72,0x72,
    0x61,0x79,0x3c,0x76,0x65,0x63,0x32,0x66,0x2c,0x20,0x36,0x75,0x3e,0x3b,0x0a,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x33,0x20,0x3a,0x20,0x69,0x33,0x32,0x20,
    0x3d,0x20,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,
    0x3b,0x0a,0x20,0x20,0x69,0x6e,0x64,0x65,0x78,0x61,0x62,0x6c,0x65,0x20,0x3d,0x20,
    0x61,0x72,0x72,0x61,0x79,0x3c,0x76,0x65,0x63,0x32,0x66,0x2c,0x20,0x36,0x75,0x3e,
    0x28,0x76,0x65,0x63,0x32,0x66,0x28,0x30,0x2e,0x30,0x66,0x2c,0x20,0x36,0x34,0x2e,
    0x30,0x66,0x29,0x2c,0x20,0x78,0x5f,0x31,0x36,0x2c,0x20,0x78,0x5f,0x31,0x37,0x2c,
    0x20,0x78,0x5f,0x31,0x36,0x2c,0x20,0x76,0x65,0x63,0x32,0x66,0x28,0x36,0x34,0x2e,
    0x30,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x2c,0x20,0x78,0x5f,0x31,0x37,0x29,
    0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x37,0x20,0x3a,0x20,0x76,
    0x65,0x63,0x32,0x66,0x20,0x3d,0x20,0x69,0x6e,0x64,0x65,0x78,0x61,0x62,0x6c,0x65,
    0x5b,0x78,0x5f,0x32,0x33,0x5d,0x3b,0x0a,0x20,0x20,0x70,0x6f,0x73,0x20,0x3d,0x20,
    0x78,0x5f,0x32,0x37,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x39,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x20,0x3d,0x20,0x70,0x6f,0x73,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x33,0x37,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x32,0x66,0x20,0x3d,0x20,0x78,0x5f,0x33,0x33,0x2e,0x73,0x63,0x72,0x65,0x65,0x6e,
    0x5f,0x73,0x69,0x7a,0x65,0x3b,0x0a,0x20,0x20,0x63,0x6c,0x69,0x70,0x5f,0x70,0x6f,
    0x73,0x20,0x3d,0x20,0x28,0x28,0x28,0x78,0x5f,0x32,0x39,0x20,0x2f,0x20,0x78,0x5f,
    0x33,0x37,0x29,0x20,0x2a,0x20,0x32,0x2e,0x30,0x66,0x29,0x20,0x2d,0x20,0x76,0x65,
    0x63,0x32,0x66,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x34,0x37,0x20,0x3a,0x20,0x66,
    0x33,0x32,0x20,0x3d,0x20,0x63,0x6c,0x69,0x70,0x5f,0x70,0x6f,0x73,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x63,0x6c,0x69,0x70,0x5f,0x70,0x6f,0x73,0x2e,0x79,0x20,0x3d,0x20,
    0x2d,0x28,0x78,0x5f,0x34,0x37,0x29,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x35,0x36,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,0x33,0x33,
    0x2e,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x63,0x74,0x2e,0x78,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x36,0x31,0x20,0x3a,0x20,0x69,0x33,0x32,
    0x20,0x3d,0x20,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,
    0x78,0x3b,0x0a,0x20,0x20,0x69,0x6e,0x64,0x65,0x78,0x61,0x62,0x6c,0x65,0x5f,0x31,
    0x20,0x3d,0x20,0x78,0x5f,0x36,0x30,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,
    0x5f,0x36,0x34,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x69,0x6e,0x64,0x65,
    0x78,0x61,0x62,0x6c,0x65,0x5f,0x31,0x5b,0x78,0x5f,0x36,0x31,0x5d,0x2e,0x78,0x3b,
    0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x36,0x37,0x20,0x3a,0x20,0x66,0x33,
    0x32,0x20,0x3d,0x20,0x78,0x5f,0x33,0x33,0x2e,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,
    0x72,0x65,0x63,0x74,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x37,0x31,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x78,0x5f,0x33,0x33,0x2e,
    0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,0x65,0x63,0x74,0x2e,0x79,0x3b,0x0a,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x37,0x32,0x20,0x3a,0x20,0x69,0x33,0x32,0x20,
    0x3d,0x20,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,
    0x3b,0x0a,0x20,0x20,0x69,0x6e,0x64,0x65,0x78,0x61,0x62,0x6c,0x65,0x5f,0x32,0x20,
    0x3d,0x20,0x78,0x5f,0x36,0x30,0x3b,0x0a,0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,
    0x37,0x35,0x20,0x3a,0x20,0x66,0x33,0x32,0x20,0x3d,0x20,0x69,0x6e,0x64,0x65,0x78,
    0x61,0x62,0x6c,0x65,0x5f,0x32,0x5b,0x78,0x5f,0x37,0x32,0x5d,0x2e,0x79,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x37,0x38,0x20,0x3a,0x20,0x66,0x33,0x32,
    0x20,0x3d,0x20,0x78,0x5f,0x33,0x33,0x2e,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x72,
    0x65,0x63,0x74,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,
    0x6f,0x72,0x64,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x66,0x28,0x28,0x78,0x5f,0x35,
    0x36,0x20,0x2b,0x20,0x28,0x78,0x5f,0x36,0x34,0x20,0x2a,0x20,0x78,0x5f,0x36,0x37,
    0x29,0x29,0x2c,0x20,0x28,0x78,0x5f,0x37,0x31,0x20,0x2b,0x20,0x28,0x78,0x5f,0x37,
    0x35,0x20,0x2a,0x20,0x78,0x5f,0x37,0x38,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x6c,
    0x65,0x74,0x20,0x78,0x5f,0x38,0x36,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x20,
    0x3d,0x20,0x63,0x6c,0x69,0x70,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x66,0x28,0x78,0x5f,0x38,0x36,0x2e,0x78,0x2c,0x20,0x78,0x5f,0x38,0x36,0x2e,0x79,
    0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x72,0x75,
    0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,
    0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x0a,0x20,0x20,0x76,
    0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x32,0x66,0x2c,0x0a,0x20,0x20,0x40,0x62,0x75,0x69,0x6c,0x74,0x69,0x6e,0x28,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x29,0x0a,0x20,0x20,0x67,0x6c,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x2c,
    0x0a,0x7d,0x0a,0x0a,0x40,0x76,0x65,0x72,0x74,0x65,0x78,0x0a,0x66,0x6e,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x40,0x62,0x75,0x69,0x6c,0x74,0x69,0x6e,0x28,0x76,0x65,0x72,
    0x74,0x65,0x78,0x5f,0x69,0x6e,0x64,0x65,0x78,0x29,0x20,0x67,0x6c,0x5f,0x56,0x65,
    0x72,0x74,0x65,0x78,0x49,0x6e,0x64,0x65,0x78,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,
    0x3a,0x20,0x75,0x33,0x32,0x29,0x20,0x2d,0x3e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,
    0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,
    0x49,0x6e,0x64,0x65,0x78,0x20,0x3d,0x20,0x62,0x69,0x74,0x63,0x61,0x73,0x74,0x3c,
    0x69,0x33,0x32,0x3e,0x28,0x67,0x6c,0x5f,0x56,0x65,0x72,0x74,0x65,0x78,0x49,0x6e,
    0x64,0x65,0x78,0x5f,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x6d,0x61,
    0x69,0x6e,0x5f,0x31,0x28,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x28,0x76,0x5f,0x74,0x65,0x78,0x63,
    0x6f,0x6f,0x72,0x64,0x2c,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
//
//    diagnostic(off, derivative_uniformity);
//
//    var<private> frag_color : vec4f;
//
//    @group(1) @binding(64) var sprite_texture : texture_2d<f32>;
//
//    @group(1) @binding(80) var sprite_sampler : sampler;
//
//    var<private> v_texcoord : vec2f;
//
//    fn main_1() {
//      let x_23 : vec2f = v_texcoord;
//      let x_24 : vec4f = textureSample(sprite_texture, sprite_sampler, x_23);
//      frag_color = x_24;
//      return;
//    }
//
//    struct main_out {
//      @location(0)
//      frag_color_1 : vec4f,
//    }
//
//    @fragment
//    fn main(@location(0) v_texcoord_param : vec2f) -> main_out {
//      v_texcoord = v_texcoord_param;
//      main_1();
//      return main_out(frag_color);
//    }
//
//
const fs_source_wgsl = [591]u8 {
    0x64,0x69,0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x28,0x6f,0x66,0x66,0x2c,0x20,
    0x64,0x65,0x72,0x69,0x76,0x61,0x74,0x69,0x76,0x65,0x5f,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x69,0x74,0x79,0x29,0x3b,0x0a,0x0a,0x76,0x61,0x72,0x3c,0x70,0x72,0x69,
    0x76,0x61,0x74,0x65,0x3e,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3a,0x20,0x76,0x65,0x63,0x34,0x66,0x3b,0x0a,0x0a,0x40,0x67,0x72,0x6f,0x75,
    0x70,0x28,0x31,0x29,0x20,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x36,0x34,
    0x29,0x20,0x76,0x61,0x72,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x20,0x3a,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x32,
    0x64,0x3c,0x66,0x33,0x32,0x3e,0x3b,0x0a,0x0a,0x40,0x67,0x72,0x6f,0x75,0x70,0x28,
    0x31,0x29,0x20,0x40,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x28,0x38,0x30,0x29,0x20,
    0x76,0x61,0x72,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x20,0x3a,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,0x0a,0x0a,0x76,
    0x61,0x72,0x3c,0x70,0x72,0x69,0x76,0x61,0x74,0x65,0x3e,0x20,0x76,0x5f,0x74,0x65,
    0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x3b,0x0a,
    0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x20,0x7b,0x0a,0x20,
    0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x33,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,
    0x66,0x20,0x3d,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,
    0x20,0x20,0x6c,0x65,0x74,0x20,0x78,0x5f,0x32,0x34,0x20,0x3a,0x20,0x76,0x65,0x63,
    0x34,0x66,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x53,0x61,0x6d,0x70,
    0x6c,0x65,0x28,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x2c,0x20,0x73,0x70,0x72,0x69,0x74,0x65,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x2c,0x20,0x78,0x5f,0x32,0x33,0x29,0x3b,0x0a,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x78,0x5f,0x32,0x34,0x3b,0x0a,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x72,0x75,
    0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,0x20,
    0x40,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x28,0x30,0x29,0x0a,0x20,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x3a,0x20,0x76,0x65,
    0x63,0x34,0x66,0x2c,0x0a,0x7d,0x0a,0x0a,0x40,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,
    0x74,0x0a,0x66,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x28,0x40,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x28,0x30,0x29,0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,
    0x64,0x5f,0x70,0x61,0x72,0x61,0x6d,0x20,0x3a,0x20,0x76,0x65,0x63,0x32,0x66,0x29,
    0x20,0x2d,0x3e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x20,0x7b,0x0a,0x20,
    0x20,0x76,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x76,0x5f,
    0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x5f,0x70,0x61,0x72,0x61,0x6d,0x3b,0x0a,
    0x20,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x31,0x28,0x29,0x3b,0x0a,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x69,0x6e,0x5f,0x6f,0x75,0x74,0x28,0x66,0x72,
    0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
pub fn blankShaderDesc(backend: sg.Backend) sg.ShaderDesc {
    var desc: sg.ShaderDesc = .{};
    desc.label = "blank_shader";
    switch (backend) {
        .GLCORE => {
            desc.vertex_func.source = &vs_source_glsl410;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = &fs_source_glsl410;
            desc.fragment_func.entry = "main";
            desc.uniform_blocks[2].stage = .VERTEX;
            desc.uniform_blocks[2].layout = .STD140;
            desc.uniform_blocks[2].size = 32;
            desc.uniform_blocks[2].glsl_uniforms[0].type = .FLOAT4;
            desc.uniform_blocks[2].glsl_uniforms[0].array_count = 2;
            desc.uniform_blocks[2].glsl_uniforms[0].glsl_name = "vs_params";
            desc.images[0].stage = .FRAGMENT;
            desc.images[0].multisampled = false;
            desc.images[0].image_type = ._2D;
            desc.images[0].sample_type = .FLOAT;
            desc.samplers[1].stage = .FRAGMENT;
            desc.samplers[1].sampler_type = .FILTERING;
            desc.image_sampler_pairs[0].stage = .FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 1;
            desc.image_sampler_pairs[0].glsl_name = "sprite_texture_sprite_sampler";
        },
        .GLES3 => {
            desc.vertex_func.source = &vs_source_glsl300es;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = &fs_source_glsl300es;
            desc.fragment_func.entry = "main";
            desc.uniform_blocks[2].stage = .VERTEX;
            desc.uniform_blocks[2].layout = .STD140;
            desc.uniform_blocks[2].size = 32;
            desc.uniform_blocks[2].glsl_uniforms[0].type = .FLOAT4;
            desc.uniform_blocks[2].glsl_uniforms[0].array_count = 2;
            desc.uniform_blocks[2].glsl_uniforms[0].glsl_name = "vs_params";
            desc.images[0].stage = .FRAGMENT;
            desc.images[0].multisampled = false;
            desc.images[0].image_type = ._2D;
            desc.images[0].sample_type = .FLOAT;
            desc.samplers[1].stage = .FRAGMENT;
            desc.samplers[1].sampler_type = .FILTERING;
            desc.image_sampler_pairs[0].stage = .FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 1;
            desc.image_sampler_pairs[0].glsl_name = "sprite_texture_sprite_sampler";
        },
        .D3D11 => {
            desc.vertex_func.source = &vs_source_hlsl5;
            desc.vertex_func.d3d11_target = "vs_5_0";
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = &fs_source_hlsl5;
            desc.fragment_func.d3d11_target = "ps_5_0";
            desc.fragment_func.entry = "main";
            desc.uniform_blocks[2].stage = .VERTEX;
            desc.uniform_blocks[2].layout = .STD140;
            desc.uniform_blocks[2].size = 32;
            desc.uniform_blocks[2].hlsl_register_b_n = 0;
            desc.images[0].stage = .FRAGMENT;
            desc.images[0].multisampled = false;
            desc.images[0].image_type = ._2D;
            desc.images[0].sample_type = .FLOAT;
            desc.images[0].hlsl_register_t_n = 0;
            desc.samplers[1].stage = .FRAGMENT;
            desc.samplers[1].sampler_type = .FILTERING;
            desc.samplers[1].hlsl_register_s_n = 0;
            desc.image_sampler_pairs[0].stage = .FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 1;
        },
        .METAL_MACOS => {
            desc.vertex_func.source = &vs_source_metal_macos;
            desc.vertex_func.entry = "main0";
            desc.fragment_func.source = &fs_source_metal_macos;
            desc.fragment_func.entry = "main0";
            desc.uniform_blocks[2].stage = .VERTEX;
            desc.uniform_blocks[2].layout = .STD140;
            desc.uniform_blocks[2].size = 32;
            desc.uniform_blocks[2].msl_buffer_n = 0;
            desc.images[0].stage = .FRAGMENT;
            desc.images[0].multisampled = false;
            desc.images[0].image_type = ._2D;
            desc.images[0].sample_type = .FLOAT;
            desc.images[0].msl_texture_n = 0;
            desc.samplers[1].stage = .FRAGMENT;
            desc.samplers[1].sampler_type = .FILTERING;
            desc.samplers[1].msl_sampler_n = 0;
            desc.image_sampler_pairs[0].stage = .FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 1;
        },
        .WGPU => {
            desc.vertex_func.source = &vs_source_wgsl;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = &fs_source_wgsl;
            desc.fragment_func.entry = "main";
            desc.uniform_blocks[2].stage = .VERTEX;
            desc.uniform_blocks[2].layout = .STD140;
            desc.uniform_blocks[2].size = 32;
            desc.uniform_blocks[2].wgsl_group0_binding_n = 0;
            desc.images[0].stage = .FRAGMENT;
            desc.images[0].multisampled = false;
            desc.images[0].image_type = ._2D;
            desc.images[0].sample_type = .FLOAT;
            desc.images[0].wgsl_group1_binding_n = 64;
            desc.samplers[1].stage = .FRAGMENT;
            desc.samplers[1].sampler_type = .FILTERING;
            desc.samplers[1].wgsl_group1_binding_n = 80;
            desc.image_sampler_pairs[0].stage = .FRAGMENT;
            desc.image_sampler_pairs[0].image_slot = 0;
            desc.image_sampler_pairs[0].sampler_slot = 1;
        },
        else => {},
    }
    return desc;
}
pub fn blankAttrSlot(attr_name: []const u8) ?usize {
    _ = attr_name;
    return null;
}
pub fn blankImageSlot(img_name: []const u8) ?usize {
    if (std.mem.eql(u8, img_name, "sprite_texture")) {
        return 0;
    }
    return null;
}
pub fn blankSamplerSlot(smp_name: []const u8) ?usize {
    if (std.mem.eql(u8, smp_name, "sprite_sampler")) {
        return 1;
    }
    return null;
}
pub fn blankUniformblockSlot(ub_name: []const u8) ?usize {
    if (std.mem.eql(u8, ub_name, "vs_params")) {
        return 2;
    }
    return null;
}
pub fn blankUniformblockSize(ub_name: []const u8) ?usize {
    if (std.mem.eql(u8, ub_name, "vs_params")) {
        return @sizeOf(VsParams);
    }
    return null;
}
pub fn blankUniformOffset(ub_name: []const u8, u_name: []const u8) ?usize {
    if (std.mem.eql(u8, ub_name, "vs_params")) {
        if (std.mem.eql(u8, u_name, "sprite_rect")) {
            return 0;
        }
        if (std.mem.eql(u8, u_name, "screen_size")) {
            return 16;
        }
    }
    return null;
}
pub fn blankUniformDesc(ub_name: []const u8, u_name: []const u8) ?sg.GlslShaderUniformDesc {
    if (std.mem.eql(u8, ub_name, "vs_params")) {
        if (std.mem.eql(u8, u_name, "sprite_rect")) {
            var desc: sg.ShaderUniformDesc = .{};
            desc.type = .FLOAT4;
            desc.array_count = 0;
            desc.glsl_name = "sprite_rect";
            return desc;
        }
        if (std.mem.eql(u8, u_name, "screen_size")) {
            var desc: sg.ShaderUniformDesc = .{};
            desc.type = .FLOAT2;
            desc.array_count = 0;
            desc.glsl_name = "screen_size";
            return desc;
        }
    }
    return null;
}
pub fn blankStoragebufferSlot(sbuf_name: []const u8) ?usize {
    _ = sbuf_name;
    return null;
}
